"""
Django settings for ragtagnews project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

"""
Django settings for ragtagnews project.

Generated by 'django-admin startproject' using Django 5.2.6.
"""

from pathlib import Path
import os  # NEW

BASE_DIR = Path(__file__).resolve().parent.parent

# --- Basic project flags (unchanged for local demo) ---
SECRET_KEY = 'django-insecure-8&v7xjrd_hi+y@=a2ug^8p6g(!#a_&21^wwx13y$w4+$vu6m8p'
DEBUG = True
ALLOWED_HOSTS: list[str] = []

# --- Apps ---
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'news.apps.NewsConfig',  # NEW: load our app (and its signals)
    'Profile'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ragtagnews.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # app templates under news/templates will be picked up via APP_DIRS
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ragtagnews.wsgi.application'

# --- Database (SQLite for class demo) ---
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# --- Auth / Passwords (default) ---
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# --- I18N / TZ ---
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Chicago'  # NEW: metering uses this as the "local day"
USE_I18N = True
USE_TZ = True  # Django stores datetimes in UTC internally; TIME_ZONE is used for display/boundaries

# --- Static files ---
STATIC_ROOT = BASE_DIR / 'productionfiles'
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# =========================================================
# Project knobs (keep it dead simple; allow .env overrides)
# =========================================================

def _getint(name: str, default: int) -> int:  # NEW
    try:
        return int(os.getenv(name, default))
    except (TypeError, ValueError):
        return default

def _getbool(name: str, default: bool) -> bool:  # NEW
    val = str(os.getenv(name, str(default))).strip().lower()
    return val in ("1", "true", "yes", "on")

# --- RSS feeds (you can add more) ---
FEEDS: list[str] = [  # NEW
    "https://techcrunch.com/feed/",
    "https://www.theverge.com/rss/index.xml",
    "https://arstechnica.com/feed/",
    "https://www.wired.com/feed/rss",
    #"https://www.engadget.com/rss.xml", #Throws errors about character encoding when ingesting news; commented out
]

# --- Limits & refresh (class-friendly defaults) ---
TTL_MINUTES            = _getint("TTL_MINUTES", 10)         # NEW
LAZY_REFRESH           = _getbool("LAZY_REFRESH", True)     # NEW

# Optional helpers used by commands/views
FETCH_TIMEOUT_SECONDS  = _getint("FETCH_TIMEOUT_SECONDS", 5)   # NEW (RSS fetch timeout)
MAX_SEARCH_RESULTS     = _getint("MAX_SEARCH_RESULTS", 50)     # NEW (cap search results)